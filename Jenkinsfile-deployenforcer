node {


stage('Download apoctl') {
sh "curl -o /usr/local/bin/apoctl https://download.aporeto.com/prismacloud/app/apoctl/linux/apoctl"
sh "sudo chmod +x /usr/local/bin/apoctl"
}

stage('Check if the authorization works') {
// Before this step you need to create the credencials file in the console at /TENANT/CLOUD namespace and import this file as a secret in Jenkins

withCredentials([file(credentialsId: 'pipeline.creds', variable: 'APOCTL_CREDS')]){
 sh "apoctl auth verify"
}

}
stage('Create Namespace') {
 withCredentials([file(credentialsId: 'pipeline.creds', variable: 'APOCTL_CREDS')]) {
   
    sh"apoctl api create namespace --namespace /${env.tenant}/${env.cloudAccount} -name=${env.group}"
    
   }
}
stage('Deploy Enforcers') {
withCredentials([file(credentialsId: 'pipeline.creds', variable: 'APOCTL_CREDS')]) {


sh "apoctl enforcer install k8s --cluster-type custom --namespace /${env.tenant}/${env.cloudAccount}/${env.group} --custom-cni-conf-dir /etc/cni/net.d --custom-cni-chained --confirm --output-dir ."
//sh "kubectl create namespace aporeto"
//sh "kubectl apply -f enforcerd.yaml"


}

}
}
